import pandas as pd
import pandas_ta as ta
import datetime
from backtesting import Backtest
from backtesting import Strategy
import numpy as np
import sys
from backtesting import Backtest, Strategy
from backtesting.lib import crossover


df = pd.read_csv("AAPL.csv")


df=df[df.High!=df.Low]
df.reset_index(inplace=True, drop=True)


def indicator(data):
    return data.Close.s.pct_change(periods=7).to_numpy() * 100

class CombinedStrategy(Strategy):

    def init(self):
        self.pct_change = self.I(indicator, self.data)

    def next(self):

        change = self.pct_change[-1]

        if self.position:
            if change < 0:
                self.position.close()
        else:
            if change > 5:
                self.buy()


class CombinedStrategy(Strategy):
    upper_bound = 70
    lower_bound = 30
    rsi_window = 14

    # Do as much initial computation as possible
    def init(self):
        self.rsi = self.I(ta.rsi, pd.Series(self.data.Close), self.rsi_window)


    # Step through bars one by one
    # Note that multiple buys are a thing here

    def next(self):
        if crossover(self.rsi, self.upper_bound):
            self.position.close()
        elif crossover(self.lower_bound, self.rsi):
            self.buy()

bt = Backtest(df, CombinedStrategy, cash=550, commission=0.002)

stats = bt.run()
print(stats)
bt.plot()
